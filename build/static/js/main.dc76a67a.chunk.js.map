{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","nameValue","numberValue","nameChange","numberChange","type","Person","person","removePerson","name","number","onClick","Persons","persons","filterValue","filter","toLowerCase","includes","map","key","id","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterValue","notificationMessage","setNotificationMessage","setClassName","useEffect","personService","initialNotes","event","target","preventDefault","window","confirm","find","p","changedNumber","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc76a67a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({value, onChange}) =>\n    <form>\n        <div>\n            filter shown with <input value={value} onChange={onChange} />\n        </div>\n    </form>\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({onSubmit, nameValue, numberValue, nameChange, numberChange}) =>\n    <>\n        <form onSubmit={onSubmit}>\n            <div>\n                name: <input\n                    value={nameValue}\n                    onChange={nameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={numberValue}\n                    onChange={numberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    </>\n\n\nexport default PersonForm"," import React from 'react'\n\nconst Person = ({ person, removePerson }) => <>{person.name} {person.number} <button onClick = {() => removePerson(person)}>delete</button><br /></>\n\n const Persons = ({ persons, filterValue, removePerson }) =>\n        <>{persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase())).map(person =>\n            <Person key={person.id} person={person} removePerson= {removePerson} />\n        )}\n        </>\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterValue, setFilterValue] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [className, setClassName] = useState('')\n\n    useEffect(() => {\n    personService\n        .getAll()\n        .then(initialNotes => {\n            setPersons(initialNotes)\n        })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        if (persons.map(person => person.name).includes(newName)) {\n            if (window.confirm(`\"${newName}\" is already added to phonebook, replace old number with a new one?`)) {\n                const person = persons.find(p => p.name === newName)\n                const changedNumber = { ...person, number: newNumber }\n                personService\n                    .update(person.id, changedNumber).then(returnedPerson => {\n                        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                        setNotificationMessage(`Number of \"${newName}\" replaced`)\n                        setClassName('notification')\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 5000)\n                    })\n                    .catch(error => {\n                        setNotificationMessage(`Information of \"${newName}\" has already been removed from server`)\n                        setClassName('error')\n                        setTimeout(() => {\n                            setNotificationMessage(null)\n                        }, 5000)\n                        setPersons(persons.filter(p => p.name !== newName))\n                    })\n\n            }\n        } else {        \n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n        personService\n            .create(personObject)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                setNewName('')\n                setNewNumber('')\n                setNotificationMessage(`Added \"${newName}\"`)\n                setClassName('notification')\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                }, 5000)\n                })\n    }}\n    const removePerson = person => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n        personService\n            .remove(person.id)\n            .then(() => setPersons(persons.filter(p => p.id !== person.id)))\n            .catch(error => {\n                setNotificationMessage(`Information of \"${person.name}\" has already been removed from server`)\n                setClassName('error')\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                }, 5000)\n                setPersons(persons.filter(p => p.name !== person.name))\n            })\n            \n    }}\n\n    const handleNameForm = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberForm = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterInput = (event) => {\n        setFilterValue(event.target.value)\n    }\n    \n\n\n\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage} className={className} />\n            <Filter value={filterValue} onChange={handleFilterInput} />\n            <h2>add a new</h2>\n            <PersonForm onSubmit={addPerson} nameValue={newName} numberValue={newNumber} nameChange={handleNameForm} numberChange={handleNumberForm} />\n            <h2>Numbers</h2>\n            <Persons persons={persons} filterValue={filterValue} removePerson={removePerson} />            \n        </div>\n    )\n}\n\nexport default App","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}